name: CI

on:
  push:
    branches:
      - main        # Ajusta a tu rama principal
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write   # si usas OIDC para AWS

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Lint all projects
        run: npx nx run-many --target=lint --all

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests & collect coverage
        run: npx nx run-many --target=test --all -- --ci --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}   # Define este secret
          files: ./coverage/**/*.json
          flags: unittests
          fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build all projects
        run: npx nx run-many --target=build --all

      - name: Fix CI (Nx)
        run: npx nx fix-ci
        if: always()
